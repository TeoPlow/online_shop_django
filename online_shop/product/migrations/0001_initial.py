# Generated by Django 5.2.4 on 2025-07-17 16:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("user", "0009_remove_order_products_remove_category_image_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author", models.CharField(max_length=255)),
                ("email", models.EmailField(max_length=254)),
                ("text", models.TextField()),
                ("rate", models.IntegerField()),
                ("date", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Specification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("value", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "image",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="category_images",
                        to="user.image",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="product.category",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SaleItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "salePrice",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("dateFrom", models.CharField(max_length=10)),
                ("dateTo", models.CharField(max_length=10)),
                (
                    "images",
                    models.ManyToManyField(
                        blank=True, related_name="sale_images", to="user.image"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("count", models.IntegerField()),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("description", models.TextField(blank=True)),
                ("fullDescription", models.TextField(blank=True)),
                ("freeDelivery", models.BooleanField(default=False)),
                ("rating", models.FloatField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="product.category",
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        blank=True,
                        related_name="product_images",
                        to="user.image",
                    ),
                ),
                (
                    "reviews",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products",
                        to="product.review",
                    ),
                ),
                (
                    "specifications",
                    models.ManyToManyField(
                        blank=True,
                        related_name="products",
                        to="product.specification",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="products", to="product.tag"
                    ),
                ),
            ],
        ),
    ]
