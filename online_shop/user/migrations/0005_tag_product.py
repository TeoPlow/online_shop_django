# Generated by Django 5.2.4 on 2025-07-10 09:35

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("user", "0004_category"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("count", models.IntegerField()),
                ("date", models.DateTimeField(auto_now_add=True)),
                ("description", models.TextField(blank=True)),
                ("freeDelivery", models.BooleanField(default=False)),
                ("reviews", models.IntegerField(default=0)),
                ("rating", models.FloatField(default=0)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="user.category",
                    ),
                ),
                (
                    "images",
                    models.ManyToManyField(
                        blank=True,
                        related_name="product_images",
                        to="user.image",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="products", to="user.tag"
                    ),
                ),
            ],
        ),
    ]
